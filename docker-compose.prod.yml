version: '3.8'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: ddtrace-run gunicorn cloud_ops.wsgi:application --bind 0.0.0.0:8000 --timeout 60 --workers 5 --access-logfile '-' --error-logfile '-'
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    depends_on:
      - db
    env_file:
      - ./.env.prod
    environment:
      - DD_AGENT_HOST=datadog # Should reference the service name of the Datadog agent container in this docker-compose

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=cloud_ops
      - POSTGRES_PASSWORD=cloud_ops
      - POSTGRES_DB=cloud_ops

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web

  datadog:
    container_name: dd-agent
    image: "gcr.io/datadoghq/agent:latest"
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com  # Defaults to 'datadoghq.com'. Customers outside North America should use their correct Datadog Domain
      - DD_APM_ENABLED=true    # Enable APM
      - DD_REMOTE_CONFIGURATION_ENABLED=${DD_REMOTE_CONFIGURATION_ENABLED}
      - DD_ENV=${DD_ENV}
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock:ro 
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro

volumes:
  postgres_data:
  static_volume:
  media_volume:
